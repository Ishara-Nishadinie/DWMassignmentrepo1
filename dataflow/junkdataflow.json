{
	"name": "junkdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlJunk",
						"type": "DatasetReference"
					},
					"name": "sourceJunk"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlSinkJunkTable",
						"type": "DatasetReference"
					},
					"name": "JunkSink"
				}
			],
			"transformations": [
				{
					"name": "JunkSKStream"
				},
				{
					"name": "selectStatus"
				},
				{
					"name": "assert1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Status_SK as string,",
				"          Order_Status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceJunk",
				"selectStatus keyGenerate(output(JunkData_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> JunkSKStream",
				"sourceJunk select(mapColumn(",
				"          Order_Status",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectStatus",
				"JunkSKStream assert(expectTrue(ERROR_FUNCTION(''), false, 'assert1')) ~> assert1",
				"assert1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          Status_SK as integer,",
				"          Order_Status as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Order_Status,",
				"          Status_SK = JunkData_SK",
				"     )) ~> JunkSink"
			]
		}
	}
}